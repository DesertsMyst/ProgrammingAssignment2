getwd()
x <- 4L
x <- c(4, TRUE)
x
x <- 4L
x <- c(4, TRUE)
class(x)
x <- 4L
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y
1
cbind(x, y)
x
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x)
x[[1]]
x <- 1:4
y <- 2
x + y
class(x+y)
class(y)
class(x)
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x > 4] <- 10
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
library(datasets)
data(iris)
?iris
Sepal.Length
'Sepal.Length'
virginica
'Sepal.Length' virginica
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm=TRUE)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm=TRUE)
ls
debug(ls)
ls
-makeCacheMatrix <- function(x = matrix()) {
## These two function create, store and recall a matrix and its inverse in/from cache
[2 2,3 3]
## Write a short comment describing this function
sd
## functions do
## These two function create, store and recall a matrix and its inverse in/from cache
}
Q
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
setwd("~/Desktop/Coursera/R_Programming")
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getInverse()
my_matrix$set(matrix(c(2, 2, 1, 4), 2, 2))
git clone https://github.com/DesertsMyst/ProgrammingAssignment2.git
git clone https://github.com/DesertsMyst/ProgrammingAssignment2.git
$git clone https://github.com/DesertsMyst/ProgrammingAssignment2.git
setwd("~/Desktop/Coursera/R_Programming/ProgrammingAssignment2")
## Put comments here that give an overall description of what your
source("ProgrammingAssignment2/cachematrix.R")
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getInverse()
my_matrix$getInverse()
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
## Put comments here that give an overall description of what your
my_matrix$getInverse()
